# https://learn.microsoft.com/en-za/azure/app-service/deploy-github-actions?tabs=openid%2Caspnetcore#generate-deployment-credentials

# https://docs.github.com/en/actions/use-cases-and-examples/deploying/deploying-net-to-azure-app-service

name: Build and Deploy BookMe API

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCE_GROUP: rg-book-me-dev-westeurope-001
  AZURE_WEBAPP_NAME: app-service-book-me-dev-westeurope-001
  AZURE_WEBAPP_PACKAGE_PATH: "."
  DOTNET_VERSION: "9.0.x"

jobs:
  build:
    environment: production
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.BUILD_NUMBER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set build number
        id: buildnumber
        run: |
          export BUILD_NUMBER=$(date +'%Y%m%d%H%M%S')
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_OUTPUT

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Run unit tests
        run: dotnet test --no-build tests/BookMe.Unitests/BookMe.UnitTests.csproj
        continue-on-error: false

      - name: Run integration tests
        run: dotnet test --no-build tests/BookMe.IntegrationTests/BookMe.IntegrationTests.csproj
        continue-on-error: true

      - name: Build solution
        run: dotnet build --configuration Release
        continue-on-error: false

      - name: Publish project
        run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/bookme-api'
        continue-on-error: false

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: bookme-api-${{ env.BUILD_NUMBER }}
          path: ${{env.AZURE_WEBAPP_PACKAGE_PATH }}/bookme-api

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Echo deployment version
        run: |
          echo "Deploying version : ${{ needs.build.outputs.build_number }}"

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: bookme-api-${{ needs.build.outputs.build_number }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: "./bookme-api"
      - name: Set DEPLOY_VERSION app setting
        run: |
          az webapp config appsettings set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --settings DEPLOY_VERSION=${{ needs.build.outputs.build_number }}

      - name: Verify deployment
        run: |
          sleep 30
          curl -sSf https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/healthz || exit 1
