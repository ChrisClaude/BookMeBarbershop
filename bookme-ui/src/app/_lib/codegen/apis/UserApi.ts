/* tslint:disable */
/* eslint-disable */
/**
 * BookMeAPI | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ProblemDetails,
  UserDto,
  UserUpdateDto,
} from '../models/index';
import {
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
    UserDtoFromJSON,
    UserDtoToJSON,
    UserUpdateDtoFromJSON,
    UserUpdateDtoToJSON,
} from '../models/index';

export interface ApiUserProfilePutRequest {
    userUpdateDto: UserUpdateDto;
}

/**
 * 
 */
export class UserApi extends runtime.BaseAPI {

    /**
     */
    async apiUserMeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/User/me`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserDtoFromJSON(jsonValue));
    }

    /**
     */
    async apiUserMeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserDto> {
        const response = await this.apiUserMeGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiUserProfilePutRaw(requestParameters: ApiUserProfilePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserDto>> {
        if (requestParameters['userUpdateDto'] == null) {
            throw new runtime.RequiredError(
                'userUpdateDto',
                'Required parameter "userUpdateDto" was null or undefined when calling apiUserProfilePut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/api/User/profile`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: UserUpdateDtoToJSON(requestParameters['userUpdateDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserDtoFromJSON(jsonValue));
    }

    /**
     */
    async apiUserProfilePut(requestParameters: ApiUserProfilePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserDto> {
        const response = await this.apiUserProfilePutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
