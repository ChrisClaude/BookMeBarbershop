/* tslint:disable */
/* eslint-disable */
/**
 * BookMeAPI | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface CreateTimeSlotsDto
 */
export interface CreateTimeSlotsDto {
    /**
     *
     * @type {Date}
     * @memberof CreateTimeSlotsDto
     */
    startDateTime?: Date;
    /**
     *
     * @type {Date}
     * @memberof CreateTimeSlotsDto
     */
    endDateTime?: Date;
    /**
     *
     * @type {boolean}
     * @memberof CreateTimeSlotsDto
     */
    isAllDay?: boolean;
}

/**
 * Check if a given object implements the CreateTimeSlotsDto interface.
 */
export function instanceOfCreateTimeSlotsDto(value: object): value is CreateTimeSlotsDto {
    return true;
}

export function CreateTimeSlotsDtoFromJSON(json: any): CreateTimeSlotsDto {
    return CreateTimeSlotsDtoFromJSONTyped(json, false);
}

export function CreateTimeSlotsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTimeSlotsDto {
    if (json == null) {
        return json;
    }
    return {

        'startDateTime': json['startDateTime'] == null ? undefined : (new Date(json['startDateTime'])),
        'endDateTime': json['endDateTime'] == null ? undefined : (new Date(json['endDateTime'])),
        'isAllDay': json['isAllDay'] == null ? undefined : json['isAllDay'],
    };
}

export function CreateTimeSlotsDtoToJSON(json: any): CreateTimeSlotsDto {
    return CreateTimeSlotsDtoToJSONTyped(json, false);
}

export function CreateTimeSlotsDtoToJSONTyped(value?: CreateTimeSlotsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'startDateTime': value['startDateTime'] == null ? undefined : ((value['startDateTime']).toISOString()),
        'endDateTime': value['endDateTime'] == null ? undefined : ((value['endDateTime']).toISOString()),
        'isAllDay': value['isAllDay'],
    };
}

