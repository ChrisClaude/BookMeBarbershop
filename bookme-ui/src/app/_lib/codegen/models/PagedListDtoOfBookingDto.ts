/* tslint:disable */
/* eslint-disable */
/**
 * BookMeAPI | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BookingDto } from './BookingDto';
import {
    BookingDtoFromJSON,
    BookingDtoFromJSONTyped,
    BookingDtoToJSON,
    BookingDtoToJSONTyped,
} from './BookingDto';

/**
 * 
 * @export
 * @interface PagedListDtoOfBookingDto
 */
export interface PagedListDtoOfBookingDto {
    /**
     * 
     * @type {number}
     * @memberof PagedListDtoOfBookingDto
     */
    pageIndex?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedListDtoOfBookingDto
     */
    pageSize?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedListDtoOfBookingDto
     */
    totalCount?: number;
    /**
     * 
     * @type {number}
     * @memberof PagedListDtoOfBookingDto
     */
    totalPages?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PagedListDtoOfBookingDto
     */
    hasPreviousPage?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PagedListDtoOfBookingDto
     */
    hasNextPage?: boolean;
    /**
     * 
     * @type {Array<BookingDto>}
     * @memberof PagedListDtoOfBookingDto
     */
    items?: Array<BookingDto> | null;
}

/**
 * Check if a given object implements the PagedListDtoOfBookingDto interface.
 */
export function instanceOfPagedListDtoOfBookingDto(value: object): value is PagedListDtoOfBookingDto {
    return true;
}

export function PagedListDtoOfBookingDtoFromJSON(json: any): PagedListDtoOfBookingDto {
    return PagedListDtoOfBookingDtoFromJSONTyped(json, false);
}

export function PagedListDtoOfBookingDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedListDtoOfBookingDto {
    if (json == null) {
        return json;
    }
    return {
        
        'pageIndex': json['pageIndex'] == null ? undefined : json['pageIndex'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
        'hasPreviousPage': json['hasPreviousPage'] == null ? undefined : json['hasPreviousPage'],
        'hasNextPage': json['hasNextPage'] == null ? undefined : json['hasNextPage'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(BookingDtoFromJSON)),
    };
}

export function PagedListDtoOfBookingDtoToJSON(json: any): PagedListDtoOfBookingDto {
    return PagedListDtoOfBookingDtoToJSONTyped(json, false);
}

export function PagedListDtoOfBookingDtoToJSONTyped(value?: PagedListDtoOfBookingDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pageIndex': value['pageIndex'],
        'pageSize': value['pageSize'],
        'totalCount': value['totalCount'],
        'totalPages': value['totalPages'],
        'hasPreviousPage': value['hasPreviousPage'],
        'hasNextPage': value['hasNextPage'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(BookingDtoToJSON)),
    };
}

