/* tslint:disable */
/* eslint-disable */
/**
 * BookMeAPI | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Roles } from './Roles';
import {
    RolesFromJSON,
    RolesFromJSONTyped,
    RolesToJSON,
    RolesToJSONTyped,
} from './Roles';

/**
 * 
 * @export
 * @interface UserDto2
 */
export interface UserDto2 {
    /**
     * 
     * @type {string}
     * @memberof UserDto2
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto2
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDto2
     */
    surname?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDto2
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDto2
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {Roles}
     * @memberof UserDto2
     */
    roles?: Roles;
}

/**
 * Check if a given object implements the UserDto2 interface.
 */
export function instanceOfUserDto2(value: object): value is UserDto2 {
    return true;
}

export function UserDto2FromJSON(json: any): UserDto2 {
    return UserDto2FromJSONTyped(json, false);
}

export function UserDto2FromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDto2 {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'surname': json['surname'] == null ? undefined : json['surname'],
        'email': json['email'] == null ? undefined : json['email'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'roles': json['roles'] == null ? undefined : RolesFromJSON(json['roles']),
    };
}

export function UserDto2ToJSON(json: any): UserDto2 {
    return UserDto2ToJSONTyped(json, false);
}

export function UserDto2ToJSONTyped(value?: UserDto2 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'surname': value['surname'],
        'email': value['email'],
        'phoneNumber': value['phoneNumber'],
        'roles': RolesToJSON(value['roles']),
    };
}

